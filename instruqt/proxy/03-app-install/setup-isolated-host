#!/bin/bash
set -euxo pipefail

echo "Running challenge 03 setup script - Started.."
epoc_start=`date +%s`


# Download the application license file:
#
# install replicated cli
curl -s https://api.github.com/repos/replicatedhq/replicated/releases/latest \
| grep "browser_download_url.*linux_amd64.tar.gz" \
| cut -d : -f 2,3 \
| tr -d \" \
| wget -O replicated.tar.gz -qi -
tar xf replicated.tar.gz replicated && rm replicated.tar.gz
mv replicated /usr/local/bin/replicated

# Obtain REPLICATED_API_TOKEN for instruqt user id
source /etc/profile.d/header.sh
password=$(get_password)
login=$( jq -n -c --arg email "${INSTRUQT_PARTICIPANT_ID}@replicated-labs.com" --arg password "${password}" '$ARGS.named' )
token=$(curl -s -H "Content-Type: application/json" --request POST -d "$login" https://id.replicated.com/v1/login | jq -r ".token")
i=0
while [[ "$token" == "null" && $i -lt 20 ]]
do
    sleep 2
    token=$(curl -s -H "Content-Type: application/json" --request POST -d "$login" https://id.replicated.com/v1/login | jq -r ".token")
    echo $token
    i=$((i+1))
done
UUID=$(cat /proc/sys/kernel/random/uuid)
apiToken=$( jq -n -c --arg name "instruqt-${UUID}" --argjson read_only false '$ARGS.named' )
access_token=$(curl -s -H "Content-Type: application/json" -H "Authorization: $token" --request POST -d "$apiToken" https://api.replicated.com/vendor/v1/user/token | jq -r ".access_token")
echo "export REPLICATED_API_TOKEN=${access_token}" >> /root/.bashrc
echo "export REPLICATED_APP=short-demo-$INSTRUQT_PARTICIPANT_ID" >> /root/.bashrc


# Download license using replicated client
REPLICATED_API_TOKEN="${access_token}"
CUSTOMER_ID=`replicated customer ls --token $REPLICATED_API_TOKEN --app proxy-$INSTRUQT_PARTICIPANT_ID | grep -v EXPIRES | awk '{print $1}'`
replicated customer download-license --customer $CUSTOMER_ID --token $REPLICATED_API_TOKEN --app proxy-$INSTRUQT_PARTICIPANT_ID --output /root/license.yaml


# done
epoc_end=`date +%s`
duration=$(($epoc_end - $epoc_start))
DURATION=`echo "DURATION: $(($duration / 60)) minutes and $(($duration % 60)) seconds elapsed."`
echo "challenge 03 setup script - Done ($DURATION)"

exit 0
