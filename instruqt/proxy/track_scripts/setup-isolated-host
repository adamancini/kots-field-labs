#!/bin/bash
set -euxo pipefail

echo "Running track setup script - isolated-host"
epoc_start=`date +%s`

# Wait for the Instruqt host bootstrap to finish.
until [ -f /opt/instruqt/bootstrap/host-bootstrap-completed ]
do
    sleep 1
done


# Determine OS platform
CENTOS=false
UBUNTU=false
if [ -f /usr/bin/python ] ; then
  if python -mplatform |grep -i 'centos'; then CENTOS=true; fi
fi
if uname -a | grep -i Ubuntu ; then UBUNTU=true; fi


# ubuntu
if $UBUNTU ; then

  NET_INTERFACE=ens4

  # install some useful packages
  apt-get update
  apt-get install -y mlocate bind9utils net-tools

  # enable proxy for apt (after setup package installs as proxy not available yet)
  LOCAL_PROXY_IP=`host proxy-host | grep has | awk '{print $4}'`
  cat <<EOF> /etc/apt/apt.conf.d/proxy.conf
Acquire::http::Proxy "http://${LOCAL_PROXY_IP}:3128/";
Acquire::https::Proxy "http://${LOCAL_PROXY_IP}:3128/";
EOF
fi

# centos
if $CENTOS ; then

  NET_INTERFACE=eth0

  # install some useful packages
  yum install -y mlocate bind-utils

  # Disable security services for smooth kurl install prompts
  # note: stopping firewalld flushes iptables! so running before adding rules
  systemctl stop firewalld
  systemctl disable firewalld
  setenforce 0

  # enable proxy for yum (after setup package installs as proxy not available yet)
  LOCAL_PROXY_IP=`host proxy-host | grep has | awk '{print $4}'`
  echo "proxy=http://$LOCAL_PROXY_IP:3128" >> /etc/yum.conf
fi


# record DNS details to local file for reference
LOCAL_HOST=`host isolated-host | grep for | awk '{print $1}'`
LOCAL_IP=`ifconfig $NET_INTERFACE | grep inet | grep -v inet6 | head -1 | awk '{print $2}'`
PUB_HOST=$HOSTNAME.$_SANDBOX_ID.instruqt.io
PUB_IP=`host $PUB_HOST | grep has | awk '{print $4}'`
echo $LOCAL_IP  $LOCAL_HOST >> /root/hosts
echo $PUB_IP  $PUB_HOST >> /root/hosts
#
LOCAL_PROXY_HOST=`host proxy-host | grep for | awk '{print $1}'`
LOCAL_PROXY_IP=`host proxy-host | grep has | awk '{print $4}'`
echo "#" >> /root/hosts
echo $LOCAL_PROXY_IP  $LOCAL_PROXY_HOST >> /root/hosts


# Allow specific egress
iptables -A OUTPUT -o lo -p all -j ACCEPT 
iptables -A OUTPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
iptables -A OUTPUT -p tcp -m tcp -m multiport --dports 53,123,3128,15778,15779 -j ACCEPT
iptables -A OUTPUT -p udp -m udp --dport 53 -j ACCEPT
iptables -A OUTPUT -p tcp -m multiport --dports 80,443 -d play.instruqt.com -j ACCEPT
LOCAL_SUBNET=`echo $LOCAL_IP | awk -F"." '{printf("%s.%s.%s.0/24"),$1,$2,$3}'`
iptables -A OUTPUT -p tcp -d $LOCAL_IP -j ACCEPT
iptables -A OUTPUT -p tcp -d $LOCAL_SUBNET -j ACCEPT
iptables -A OUTPUT -p tcp -d 169.254.169.254 -j ACCEPT
iptables -A OUTPUT -p tcp -d 127.0.0.53 -j ACCEPT
iptables -A OUTPUT -p tcp -d replicated.app -j ACCEPT
# kubernetes
iptables -A OUTPUT -d 10.0.0.0/8 -j ACCEPT
#
# limit forward
iptables -I FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
iptables -A FORWARD -j DROP
#
# note: iptables egress drop is in the first challenge setup script as would block instruqt track initialisation here

# enable forward routing
echo "net.ipv4.ip_forward = 1" | tee /etc/sysctl.d/99-ipforward.conf
echo 1 > /proc/sys/net/ipv4/ip_forward
sysctl -a | grep ip_forward

# done
epoc_end=`date +%s`
duration=$(($epoc_end - $epoc_start))
DURATION=`echo "DURATION: $(($duration / 60)) minutes and $(($duration % 60)) seconds elapsed."`
echo "track setup script - isolated-host - Done ($DURATION)"

exit 0
